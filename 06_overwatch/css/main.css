/* 중요 
 css코드가 길어지면 선택자 찾기가 어렵기에
 모든 css코드는 html구조에 맞춰 작성하는게 좋음
*/
body {
  height: 100vh;/*뷰포트 height꽉채움*/
  background-image: url("../images/bg.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;/*배경은 움직이지 않게 함*/
}
.container {
padding: 50px 0;
}

.container .heroes { 
  display: flex;
  /* 기본적으로 줄바꿈되지 않고
  기본 감소 너비 비율이 1이어서 한줄에 모든 요소가 표시 */
  flex-wrap: wrap;
  /* background-color: orange; */
  justify-content: center;
  max-width: 700px;

  /* flex로도 정렬이 가능하지만 더 복잡함. */
  /* margin으로 가운데 정렬하기 위한 조건
  블록요소애 가로 사이즈가 명시되어 있는 경우
  */
  margin: 0 auto; /*width사이즈가 있어야함*/
  padding: 40px 20px;

}

.container .heroes .hero {
  width: 80px;
  height: 84px;
  margin: 4px;
  background-color: #555;
  transform: skewX(-14deg);
  border: 3px solid #fff;
  border-radius: 10px;
  box-sizing: border-box;
  /* 확대 효과를 좀 더 자연스럽게 전환 효과 주기 요소위에 써야됨 */
  /* transition: 0.5s; */
  /* 개별 적용시 css속성마다 쉼표로 구분 */
  transition: 
    transform .1s,
    background-color .6s;
  overflow: hidden;
}

/* Quiz:캐릭터에 마우스 올렸을때 배경색 변경(#ff9c00) 및 확대 (1.3) */

.container .heroes .hero:hover {
  transform: skewX(-14deg) scale(1.3); /*fransform 속성을 덮어씌우면 기울기 없어짐 다시 써줌 */
  z-index: 1; /*postion 값이 없어도 flex items이기때문에 사용 가능 */
}

.container .heroes .hero .image {
  width: 140%; 
  height: 100%;
  background-position: center;
  background-size: 90px;
  background-repeat: no-repeat;
  transform: skewX(14deg) translate(-16px);

}

.container .heroes .hero:nth-child(1) .image { background-image: url("../images/hero1.png"); }
.container .heroes .hero:nth-child(2) .image { background-image: url("../images/hero2.png"); }
.container .heroes .hero:nth-child(3) .image { background-image: url("../images/hero3.png"); }
.container .heroes .hero:nth-child(4) .image { background-image: url("../images/hero4.png"); }
.container .heroes .hero:nth-child(5) .image { background-image: url("../images/hero5.png"); }
.container .heroes .hero:nth-child(6) .image { background-image: url("../images/hero6.png"); }
.container .heroes .hero:nth-child(7) .image { background-image: url("../images/hero7.png"); }
.container .heroes .hero:nth-child(8) .image { background-image: url("../images/hero8.png"); }
.container .heroes .hero:nth-child(9) .image { background-image: url("../images/hero9.png"); }
.container .heroes .hero:nth-child(10) .image { background-image: url("../images/hero10.png"); }

.container .heroes .hero:nth-child(11) .image { background-image: url("../images/hero11.png"); }
.container .heroes .hero:nth-child(12) .image { background-image: url("../images/hero12.png"); }
.container .heroes .hero:nth-child(13) .image { background-image: url("../images/hero13.png"); }
.container .heroes .hero:nth-child(14) .image { background-image: url("../images/hero14.png"); }
.container .heroes .hero:nth-child(15) .image { background-image: url("../images/hero15.png"); }
.container .heroes .hero:nth-child(16) .image { background-image: url("../images/hero16.png"); }
.container .heroes .hero:nth-child(17) .image { background-image: url("../images/hero17.png"); }
.container .heroes .hero:nth-child(18) .image { background-image: url("../images/hero18.png"); }
.container .heroes .hero:nth-child(19) .image { background-image: url("../images/hero19.png"); }
.container .heroes .hero:nth-child(20) .image { background-image: url("../images/hero20.png"); }

.container .heroes .hero:nth-child(21) .image { background-image: url("../images/hero21.png"); }
.container .heroes .hero:nth-child(22) .image { background-image: url("../images/hero22.png"); }
.container .heroes .hero:nth-child(23) .image { background-image: url("../images/hero23.png"); }
.container .heroes .hero:nth-child(24) .image { background-image: url("../images/hero24.png"); }
.container .heroes .hero:nth-child(25) .image { background-image: url("../images/hero25.png"); }
.container .heroes .hero:nth-child(26) .image { background-image: url("../images/hero26.png"); }
.container .heroes .hero:nth-child(27) .image { background-image: url("../images/hero27.png"); }
.container .heroes .hero:nth-child(28) .image { background-image: url("../images/hero28.png"); }
.container .heroes .hero:nth-child(29) .image { background-image: url("../images/hero29.png"); }
.container .heroes .hero:nth-child(30) .image { background-image: url("../images/hero30.png"); }

.container .heroes .hero:nth-child(31) .image { background-image: url("../images/hero31.png"); }
.container .heroes .hero:nth-child(32) .image { background-image: url("../images/hero32.png"); }

.container .logo {
  max-width: 300px;
  /* 가로사이즈를 갖는 블록 요소 하나를 가운데로 정렬한고 싶다면 flex대신 margin을 이용하면 간단함 */
  margin: 0 auto;
  padding: 50px 0;
}
.container .logo img {
  width: 100%;
  /* 부모요소 가로너비에 100% 300px보다 커질 수없음 */

}